TensorFlow的安装：
1.Mac OS
  安装virtualenv
    virtualenv是Python的沙箱工具，用于创建独立的Python环境。我们毕竟是在自己的机器上做实验，为了不来回修改各种环境变量，这里用virtualenv为TensorFlow
    创建一套“隔离”的Python运行环境
    
    1.用pip安装virtualenv
    
    $pip install virtualenv --upgrade
    安装好后创建一个工作目录，这里直接在home下创建了一个tensorflow文件夹：
    $virtualenv --system-site-packages ~/tensorflow
    然后进入该目录，激活沙箱：
    $cd ~/tensorflow
    $source bin/activate
    (tensorflow)$
    
    2.在virtualenv里安装TensorFlow
    
    进入沙箱后，执行下面的命令来执行安装Tensorflow
    （tensorflow）$pip install tensorflow==1.1.0
    
    3.运行Tensorflow
    （tensorflow）$python
    >>>
    >>>import tensorflow as tf
    >>>hello = tf.constant('Hello TensorFlow!')
    >>>sess = tf.Session()
    >>>print sess.run(hello)
    Hello TensorFlow
    
    注意每次需要运行TensorFlow程序时，都需要进入tensorflow目录，然后执行source bin/activate命令来激活沙箱
2.ubuntun/Linux
  使用ubuntun/Linux的读者可以照着Mac OS的环境准备，先安装virtualenv的沙盒环境，再用pip安装Tensorflow软件包
  Tensorflow的ubuntun/linux安装分为CPU版本和GPU版本，下面来分别介绍。
  （1）安装仅支持CPU版本，直接安装如下：
  $pip install tensorflow==1.1.0
  （2）安装支持GPU的版本的前提是已经安装了CUDA SDK，直接使用下面的命令：
  $pip install tensorflow-gpu==1.1.0

3.windows环境准备
  Tensorflow在Windows上只支持64位Python3.5x,可以通过Python Release for Windows或Python3.5from Anaconda下载安装Python3.5.2。记得“Add Python
  3.5 to PATH”。安装后Python包自带pip命令。
  TensorFlow的Windows安装也分为CPU版本和GPU版本，下面分别介绍。
  (1)CPU版本安装
  pip install tensorflow==1.1.0
  (2)GPU版本安装
  pip install tensorflow-gpu==1.1.0
  (3)运行Tensorflow
  >>>import tensorflow as tf 
  >>>sess = tf.Session()
  >>>a = tf.constant(10)
  >>>b = tf.constant(22)
  >>>print(sess.run(a + b))
  32
  
  Tensorflow依赖的其他模块：
  1.numpy
  numpy是用来存储和处理大型矩阵的科学计算包，比Python自身的嵌套列表结构(list structure)要高效的多，它包括：
  一个强大的N维数组对象Array
  比较成熟的函数库
  用于整合C/C++和Fortran代码的工具包
  实用的线性代数、傅里叶变换和随机数生成函数
  $pip install numpy
  
  2.matplotlib
  matplotlib是Python最著名的绘图库
  $pip install matplotlib --upgrade
  
  3.jupyter
  jupyter notebook是Ipython的升级版，能够在浏览器中创建和共享代码、方程、说明文档。
  $pip install jupyter --upgrade
  
  4.scikit-image
  scikit-image有一组图像处理的算法，可以是过滤一张图片变得很简单，非常适合用于对图像的预处理
  $pip install scikit-image --upgrade
  
  5.keras
  keras是第一个被添加到TensorFlow核心中的高级别框架，成为Tensorflow的默认API
  $pip install keras --upgrade
  
  6.tflearn 
  TFLearn是另一个支持Tensorflow的第三方框架
  $pip install git+https://github.com/tflearn/tflearn.git
     
